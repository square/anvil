def generatedDirPath = 'generated/sources/build-properties/kotlin/main'

sourceSets {
  test.java.srcDirs += "$buildDir/$generatedDirPath"
}

def warningsAsErrors = rootProject.ext.warningsAsErrors

def generateBuildProperties = project.tasks.register('generateBuildProperties') {
  File buildPropertiesFile = layout.buildDirectory.file(generatedDirPath + '/BuildProperties.kt')
      .get().asFile

  def fullTestRun = libs.versions.config.fullTestRun.get()

  inputs.property 'fullTestRun', fullTestRun
  inputs.property 'kotlinVersion', libs.versions.kotlin.get()
  inputs.property 'warningsAsErrors', warningsAsErrors

  outputs.file buildPropertiesFile

  doLast {
    buildPropertiesFile.parentFile.mkdirs()
    buildPropertiesFile.write """\
      package com.squareup.anvil.compiler

      internal const val WARNINGS_AS_ERRORS = $warningsAsErrors
     
      internal const val FULL_TEST_RUN = $fullTestRun
    """.stripIndent()
  }
}

tasks.named("compileKotlin").configure {
  it.dependsOn generateBuildProperties
}

// So Gradle stops complaining about the missing dependency
tasks.named("runKtlintCheckOverTestSourceSet").configure {
  it.dependsOn generateBuildProperties
}
