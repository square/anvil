public final class com/squareup/anvil/compiler/api/AnalysisBackend : java/lang/Enum {
	public static final field EMBEDDED Lcom/squareup/anvil/compiler/api/AnalysisBackend;
	public static final field KSP Lcom/squareup/anvil/compiler/api/AnalysisBackend;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lcom/squareup/anvil/compiler/api/AnalysisBackend;
	public static fun values ()[Lcom/squareup/anvil/compiler/api/AnalysisBackend;
}

public abstract interface class com/squareup/anvil/compiler/api/AnvilApplicabilityChecker {
	public static final field Companion Lcom/squareup/anvil/compiler/api/AnvilApplicabilityChecker$Companion;
	public abstract fun isApplicable (Lcom/squareup/anvil/compiler/api/AnvilContext;)Z
}

public final class com/squareup/anvil/compiler/api/AnvilApplicabilityChecker$Companion {
	public final fun always ()Lcom/squareup/anvil/compiler/api/AnvilApplicabilityChecker;
}

public final class com/squareup/anvil/compiler/api/AnvilCompilationException : org/jetbrains/kotlin/codegen/CompilationException {
	public static final field Companion Lcom/squareup/anvil/compiler/api/AnvilCompilationException$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/Throwable;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class com/squareup/anvil/compiler/api/AnvilCompilationException$Companion {
	public final fun invoke (Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Ljava/lang/String;Ljava/lang/Throwable;)Lcom/squareup/anvil/compiler/api/AnvilCompilationException;
	public final fun invoke (Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;Ljava/lang/String;Ljava/lang/Throwable;)Lcom/squareup/anvil/compiler/api/AnvilCompilationException;
	public final fun invoke (Lorg/jetbrains/kotlin/descriptors/PropertyDescriptor;Ljava/lang/String;Ljava/lang/Throwable;)Lcom/squareup/anvil/compiler/api/AnvilCompilationException;
	public final fun invoke (Lorg/jetbrains/kotlin/descriptors/ValueParameterDescriptor;Ljava/lang/String;Ljava/lang/Throwable;)Lcom/squareup/anvil/compiler/api/AnvilCompilationException;
	public final fun invoke (Lorg/jetbrains/kotlin/descriptors/annotations/AnnotationDescriptor;Ljava/lang/String;Ljava/lang/Throwable;)Lcom/squareup/anvil/compiler/api/AnvilCompilationException;
	public final fun invoke (Lorg/jetbrains/kotlin/ir/IrElement;Ljava/lang/String;Ljava/lang/Throwable;)Lcom/squareup/anvil/compiler/api/AnvilCompilationException;
	public final fun invoke (Lorg/jetbrains/kotlin/ir/symbols/IrSymbol;Ljava/lang/String;Ljava/lang/Throwable;)Lcom/squareup/anvil/compiler/api/AnvilCompilationException;
	public static synthetic fun invoke$default (Lcom/squareup/anvil/compiler/api/AnvilCompilationException$Companion;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Ljava/lang/String;Ljava/lang/Throwable;ILjava/lang/Object;)Lcom/squareup/anvil/compiler/api/AnvilCompilationException;
	public static synthetic fun invoke$default (Lcom/squareup/anvil/compiler/api/AnvilCompilationException$Companion;Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;Ljava/lang/String;Ljava/lang/Throwable;ILjava/lang/Object;)Lcom/squareup/anvil/compiler/api/AnvilCompilationException;
	public static synthetic fun invoke$default (Lcom/squareup/anvil/compiler/api/AnvilCompilationException$Companion;Lorg/jetbrains/kotlin/descriptors/PropertyDescriptor;Ljava/lang/String;Ljava/lang/Throwable;ILjava/lang/Object;)Lcom/squareup/anvil/compiler/api/AnvilCompilationException;
	public static synthetic fun invoke$default (Lcom/squareup/anvil/compiler/api/AnvilCompilationException$Companion;Lorg/jetbrains/kotlin/descriptors/ValueParameterDescriptor;Ljava/lang/String;Ljava/lang/Throwable;ILjava/lang/Object;)Lcom/squareup/anvil/compiler/api/AnvilCompilationException;
	public static synthetic fun invoke$default (Lcom/squareup/anvil/compiler/api/AnvilCompilationException$Companion;Lorg/jetbrains/kotlin/descriptors/annotations/AnnotationDescriptor;Ljava/lang/String;Ljava/lang/Throwable;ILjava/lang/Object;)Lcom/squareup/anvil/compiler/api/AnvilCompilationException;
	public static synthetic fun invoke$default (Lcom/squareup/anvil/compiler/api/AnvilCompilationException$Companion;Lorg/jetbrains/kotlin/ir/IrElement;Ljava/lang/String;Ljava/lang/Throwable;ILjava/lang/Object;)Lcom/squareup/anvil/compiler/api/AnvilCompilationException;
	public static synthetic fun invoke$default (Lcom/squareup/anvil/compiler/api/AnvilCompilationException$Companion;Lorg/jetbrains/kotlin/ir/symbols/IrSymbol;Ljava/lang/String;Ljava/lang/Throwable;ILjava/lang/Object;)Lcom/squareup/anvil/compiler/api/AnvilCompilationException;
}

public abstract interface class com/squareup/anvil/compiler/api/AnvilContext {
	public abstract fun getDisableComponentMerging ()Z
	public abstract fun getGenerateFactories ()Z
	public abstract fun getGenerateFactoriesOnly ()Z
	public abstract fun getModule ()Lorg/jetbrains/kotlin/descriptors/ModuleDescriptor;
	public abstract fun getTrackSourceFiles ()Z
	public abstract fun getWillHaveDaggerFactories ()Z
}

public abstract interface class com/squareup/anvil/compiler/api/CodeGenerator : com/squareup/anvil/compiler/api/AnvilApplicabilityChecker {
	public abstract fun generateCode (Ljava/io/File;Lorg/jetbrains/kotlin/descriptors/ModuleDescriptor;Ljava/util/Collection;)Ljava/util/Collection;
	public abstract fun isApplicable (Lcom/squareup/anvil/compiler/api/AnvilContext;)Z
}

public final class com/squareup/anvil/compiler/api/CodeGeneratorKt {
	public static final fun createGeneratedFile (Lcom/squareup/anvil/compiler/api/CodeGenerator;Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/squareup/anvil/compiler/api/GeneratedFile;
	public static final fun createGeneratedFile (Lcom/squareup/anvil/compiler/api/CodeGenerator;Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;[Ljava/io/File;)Lcom/squareup/anvil/compiler/api/GeneratedFileWithSources;
	public static final fun createGeneratedFile (Lcom/squareup/anvil/compiler/api/CodeGenerator;Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;)Lcom/squareup/anvil/compiler/api/GeneratedFileWithSources;
}

public final class com/squareup/anvil/compiler/api/ComponentMergingBackend : java/lang/Enum {
	public static final field IR Lcom/squareup/anvil/compiler/api/ComponentMergingBackend;
	public static final field KSP Lcom/squareup/anvil/compiler/api/ComponentMergingBackend;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lcom/squareup/anvil/compiler/api/ComponentMergingBackend;
	public static fun values ()[Lcom/squareup/anvil/compiler/api/ComponentMergingBackend;
}

public abstract interface class com/squareup/anvil/compiler/api/FileWithContent : java/lang/Comparable {
	public abstract fun compareTo (Lcom/squareup/anvil/compiler/api/FileWithContent;)I
	public abstract fun component1 ()Ljava/io/File;
	public abstract fun component2 ()Ljava/lang/String;
	public abstract fun getContent ()Ljava/lang/String;
	public abstract fun getFile ()Ljava/io/File;
}

public final class com/squareup/anvil/compiler/api/FileWithContent$DefaultImpls {
	public static fun compareTo (Lcom/squareup/anvil/compiler/api/FileWithContent;Lcom/squareup/anvil/compiler/api/FileWithContent;)I
	public static fun component1 (Lcom/squareup/anvil/compiler/api/FileWithContent;)Ljava/io/File;
	public static fun component2 (Lcom/squareup/anvil/compiler/api/FileWithContent;)Ljava/lang/String;
}

public final class com/squareup/anvil/compiler/api/GeneratedFile : com/squareup/anvil/compiler/api/FileWithContent {
	public fun <init> (Ljava/io/File;Ljava/lang/String;)V
	public fun compareTo (Lcom/squareup/anvil/compiler/api/FileWithContent;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1 ()Ljava/io/File;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/io/File;Ljava/lang/String;)Lcom/squareup/anvil/compiler/api/GeneratedFile;
	public static synthetic fun copy$default (Lcom/squareup/anvil/compiler/api/GeneratedFile;Ljava/io/File;Ljava/lang/String;ILjava/lang/Object;)Lcom/squareup/anvil/compiler/api/GeneratedFile;
	public fun equals (Ljava/lang/Object;)Z
	public fun getContent ()Ljava/lang/String;
	public fun getFile ()Ljava/io/File;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/squareup/anvil/compiler/api/GeneratedFileWithSources : com/squareup/anvil/compiler/api/FileWithContent {
	public fun <init> (Ljava/io/File;Ljava/lang/String;Ljava/util/Set;)V
	public fun compareTo (Lcom/squareup/anvil/compiler/api/FileWithContent;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun component1 ()Ljava/io/File;
	public fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/util/Set;
	public fun equals (Ljava/lang/Object;)Z
	public fun getContent ()Ljava/lang/String;
	public fun getFile ()Ljava/io/File;
	public final fun getSourceFiles ()Ljava/util/Set;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

