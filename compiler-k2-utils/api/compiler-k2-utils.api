public final class com/squareup/anvil/compiler/k2/utils/fir/AnvilPredicates {
	public static final field INSTANCE Lcom/squareup/anvil/compiler/k2/utils/fir/AnvilPredicates;
	public final fun getContributedModule ()Lorg/jetbrains/kotlin/fir/extensions/predicate/LookupPredicate;
	public final fun getHasAnvilContributesBinding ()Lorg/jetbrains/kotlin/fir/extensions/predicate/LookupPredicate;
	public final fun getHasAnvilContributesMultibinding ()Lorg/jetbrains/kotlin/fir/extensions/predicate/LookupPredicate;
	public final fun getHasAnvilContributesSubcomponent ()Lorg/jetbrains/kotlin/fir/extensions/predicate/LookupPredicate;
	public final fun getHasAnvilContributesTo ()Lorg/jetbrains/kotlin/fir/extensions/predicate/LookupPredicate;
	public final fun getHasAnyAnvilContributes ()Lorg/jetbrains/kotlin/fir/extensions/predicate/LookupPredicate;
	public final fun getHasInjectAnnotation ()Lorg/jetbrains/kotlin/fir/extensions/predicate/LookupPredicate;
	public final fun getHasMergeComponentAnnotation ()Lorg/jetbrains/kotlin/fir/extensions/predicate/LookupPredicate;
	public final fun getHasModuleAnnotation ()Lorg/jetbrains/kotlin/fir/extensions/predicate/LookupPredicate;
	public final fun getHasQualifierMetaAnnotation ()Lorg/jetbrains/kotlin/fir/extensions/predicate/DeclarationPredicate;
}

public final class com/squareup/anvil/compiler/k2/utils/fir/ConeKotlinTypeUtilsKt {
	public static final fun requireClassId (Lorg/jetbrains/kotlin/fir/types/ConeKotlinType;)Lorg/jetbrains/kotlin/name/ClassId;
	public static final fun requireFqName (Lorg/jetbrains/kotlin/fir/types/ConeKotlinType;)Lorg/jetbrains/kotlin/name/FqName;
	public static final fun wrapInProvider (Lorg/jetbrains/kotlin/fir/types/ConeKotlinType;Lorg/jetbrains/kotlin/fir/resolve/providers/FirSymbolProvider;)Lorg/jetbrains/kotlin/fir/types/ConeClassLikeType;
}

public final class com/squareup/anvil/compiler/k2/utils/fir/FirAnnotationCallBuilderUtilsKt {
	public static final fun setAnnotationType (Lorg/jetbrains/kotlin/fir/expressions/builder/FirAnnotationCallBuilder;Lorg/jetbrains/kotlin/name/ClassId;Lorg/jetbrains/kotlin/psi/KtPsiFactory;)V
}

public final class com/squareup/anvil/compiler/k2/utils/fir/FirAnnotationUtilsKt {
	public static final fun argumentAt (Lorg/jetbrains/kotlin/fir/expressions/FirAnnotation;Lorg/jetbrains/kotlin/name/Name;IZ)Lorg/jetbrains/kotlin/fir/expressions/FirExpression;
	public static final fun classId (Lorg/jetbrains/kotlin/fir/expressions/FirAnnotation;Lorg/jetbrains/kotlin/fir/FirSession;)Lorg/jetbrains/kotlin/name/ClassId;
	public static final fun classListArgumentAt (Lorg/jetbrains/kotlin/fir/expressions/FirAnnotation;Lorg/jetbrains/kotlin/name/Name;I)Ljava/util/List;
	public static final fun createFirAnnotation (Lorg/jetbrains/kotlin/name/ClassId;Lorg/jetbrains/kotlin/fir/expressions/FirAnnotationArgumentMapping;Lorg/jetbrains/kotlin/KtSourceElement;Lorg/jetbrains/kotlin/descriptors/annotations/AnnotationUseSiteTarget;)Lorg/jetbrains/kotlin/fir/expressions/FirAnnotation;
	public static synthetic fun createFirAnnotation$default (Lorg/jetbrains/kotlin/name/ClassId;Lorg/jetbrains/kotlin/fir/expressions/FirAnnotationArgumentMapping;Lorg/jetbrains/kotlin/KtSourceElement;Lorg/jetbrains/kotlin/descriptors/annotations/AnnotationUseSiteTarget;ILjava/lang/Object;)Lorg/jetbrains/kotlin/fir/expressions/FirAnnotation;
	public static final fun requireArgumentAt (Lorg/jetbrains/kotlin/fir/expressions/FirAnnotation;Lorg/jetbrains/kotlin/name/Name;IZ)Lorg/jetbrains/kotlin/fir/expressions/FirExpression;
	public static final fun requireClassId (Lorg/jetbrains/kotlin/fir/expressions/FirAnnotation;Lorg/jetbrains/kotlin/fir/FirSession;)Lorg/jetbrains/kotlin/name/ClassId;
	public static final fun requireScopeArgument (Lorg/jetbrains/kotlin/fir/expressions/FirAnnotation;)Lorg/jetbrains/kotlin/fir/expressions/FirGetClassCall;
	public static final fun requireScopeArgument (Lorg/jetbrains/kotlin/fir/expressions/FirAnnotation;Lorg/jetbrains/kotlin/fir/FirSession;)Lorg/jetbrains/kotlin/fir/types/ConeKotlinType;
	public static final fun requireScopeArgument (Lorg/jetbrains/kotlin/fir/expressions/FirAnnotation;Lorg/jetbrains/kotlin/fir/extensions/FirSupertypeGenerationExtension$TypeResolveService;)Lorg/jetbrains/kotlin/fir/types/ConeKotlinType;
}

public final class com/squareup/anvil/compiler/k2/utils/fir/FirBasedSymbolUtilsKt {
	public static final fun hasAnnotation (Lorg/jetbrains/kotlin/fir/symbols/FirBasedSymbol;Lorg/jetbrains/kotlin/name/ClassId;Lorg/jetbrains/kotlin/fir/FirSession;)Z
	public static final fun requireAnnotation (Lorg/jetbrains/kotlin/fir/symbols/FirBasedSymbol;Lorg/jetbrains/kotlin/name/ClassId;Lorg/jetbrains/kotlin/fir/FirSession;)Lorg/jetbrains/kotlin/fir/expressions/FirAnnotation;
	public static final fun requireAnnotationCall (Lorg/jetbrains/kotlin/fir/symbols/FirBasedSymbol;Lorg/jetbrains/kotlin/name/ClassId;Lorg/jetbrains/kotlin/fir/FirSession;)Lorg/jetbrains/kotlin/fir/expressions/FirAnnotationCall;
}

public final class com/squareup/anvil/compiler/k2/utils/fir/FirClassLikeSymbolUtilsKt {
	public static final fun coneLookupTagBasedType (Lorg/jetbrains/kotlin/fir/symbols/impl/FirClassLikeSymbol;)Lorg/jetbrains/kotlin/fir/types/ConeLookupTagBasedType;
	public static final fun contributesToAnnotations (Lorg/jetbrains/kotlin/fir/symbols/impl/FirClassLikeSymbol;Lorg/jetbrains/kotlin/fir/FirSession;)Ljava/util/List;
	public static final fun contributesToScope (Lorg/jetbrains/kotlin/fir/symbols/impl/FirClassLikeSymbol;Lorg/jetbrains/kotlin/name/ClassId;Lorg/jetbrains/kotlin/fir/FirSession;Lorg/jetbrains/kotlin/fir/extensions/FirSupertypeGenerationExtension$TypeResolveService;)Z
	public static final fun contributesToScope (Lorg/jetbrains/kotlin/fir/symbols/impl/FirClassLikeSymbol;Lorg/jetbrains/kotlin/name/FqName;Lorg/jetbrains/kotlin/fir/FirSession;Lorg/jetbrains/kotlin/fir/extensions/FirSupertypeGenerationExtension$TypeResolveService;)Z
	public static final fun fqName (Lorg/jetbrains/kotlin/fir/symbols/impl/FirClassLikeSymbol;)Lorg/jetbrains/kotlin/name/FqName;
	public static final fun toGetClassCall (Lorg/jetbrains/kotlin/fir/symbols/impl/FirClassLikeSymbol;)Lorg/jetbrains/kotlin/fir/expressions/FirGetClassCall;
	public static final fun toKClassRef (Lorg/jetbrains/kotlin/fir/symbols/impl/FirClassLikeSymbol;)Lorg/jetbrains/kotlin/fir/types/ConeClassLikeType;
}

public final class com/squareup/anvil/compiler/k2/utils/fir/FirGetClassCallUtilsKt {
	public static final fun requireTargetClassId (Lorg/jetbrains/kotlin/fir/expressions/FirGetClassCall;)Lorg/jetbrains/kotlin/name/ClassId;
	public static final fun requireTargetType (Lorg/jetbrains/kotlin/fir/expressions/FirGetClassCall;)Lorg/jetbrains/kotlin/fir/types/ConeKotlinType;
	public static final fun resolveConeType (Lorg/jetbrains/kotlin/fir/expressions/FirGetClassCall;Lorg/jetbrains/kotlin/fir/extensions/FirSupertypeGenerationExtension$TypeResolveService;)Lorg/jetbrains/kotlin/fir/types/ConeKotlinType;
	public static final fun userTypeRef (Lorg/jetbrains/kotlin/fir/expressions/FirGetClassCall;)Lorg/jetbrains/kotlin/fir/types/FirUserTypeRef;
}

public final class com/squareup/anvil/compiler/k2/utils/fir/FirPropertyAccessExpressionUtilsKt {
	public static final fun getQualifierName (Lorg/jetbrains/kotlin/fir/expressions/FirPropertyAccessExpression;)Lorg/jetbrains/kotlin/name/Name;
	public static final fun qualifierSegmentsWithSelf (Lorg/jetbrains/kotlin/fir/expressions/FirPropertyAccessExpression;)Ljava/util/List;
}

public final class com/squareup/anvil/compiler/k2/utils/fir/FirUserTypeRefUtilsKt {
	public static final fun createUserTypeRef (Lorg/jetbrains/kotlin/name/ClassId;Lorg/jetbrains/kotlin/KtSourceElement;Z)Lorg/jetbrains/kotlin/fir/types/FirUserTypeRef;
	public static synthetic fun createUserTypeRef$default (Lorg/jetbrains/kotlin/name/ClassId;Lorg/jetbrains/kotlin/KtSourceElement;ZILjava/lang/Object;)Lorg/jetbrains/kotlin/fir/types/FirUserTypeRef;
}

public final class com/squareup/anvil/compiler/k2/utils/fir/ResolveUtilsKt {
	public static final fun classLikeSymbolOrNull (Lorg/jetbrains/kotlin/name/ClassId;Lorg/jetbrains/kotlin/fir/FirSession;)Lorg/jetbrains/kotlin/fir/symbols/impl/FirClassLikeSymbol;
	public static final fun regularClassSymbolOrNull (Lorg/jetbrains/kotlin/name/ClassId;Lorg/jetbrains/kotlin/fir/FirSession;)Lorg/jetbrains/kotlin/fir/symbols/impl/FirRegularClassSymbol;
	public static final fun requireClassLikeSymbol (Lorg/jetbrains/kotlin/name/ClassId;Lorg/jetbrains/kotlin/fir/FirSession;)Lorg/jetbrains/kotlin/fir/symbols/impl/FirClassLikeSymbol;
	public static final fun requireRegularClassSymbol (Lorg/jetbrains/kotlin/name/ClassId;Lorg/jetbrains/kotlin/fir/FirSession;)Lorg/jetbrains/kotlin/fir/symbols/impl/FirRegularClassSymbol;
}

public final class com/squareup/anvil/compiler/k2/utils/names/ClassIds {
	public static final field INSTANCE Lcom/squareup/anvil/compiler/k2/utils/names/ClassIds;
	public final fun getAnvilContributesBinding ()Lorg/jetbrains/kotlin/name/ClassId;
	public final fun getAnvilContributesMultibinding ()Lorg/jetbrains/kotlin/name/ClassId;
	public final fun getAnvilContributesSubcomponent ()Lorg/jetbrains/kotlin/name/ClassId;
	public final fun getAnvilContributesTo ()Lorg/jetbrains/kotlin/name/ClassId;
	public final fun getAnvilMergeComponent ()Lorg/jetbrains/kotlin/name/ClassId;
	public final fun getAnvilMergeInterfaces ()Lorg/jetbrains/kotlin/name/ClassId;
	public final fun getAnvilMergeModules ()Lorg/jetbrains/kotlin/name/ClassId;
	public final fun getAnvilMergeSubcomponent ()Lorg/jetbrains/kotlin/name/ClassId;
	public final fun getDaggerBinds ()Lorg/jetbrains/kotlin/name/ClassId;
	public final fun getDaggerComponent ()Lorg/jetbrains/kotlin/name/ClassId;
	public final fun getDaggerFactory ()Lorg/jetbrains/kotlin/name/ClassId;
	public final fun getDaggerLazy ()Lorg/jetbrains/kotlin/name/ClassId;
	public final fun getDaggerModule ()Lorg/jetbrains/kotlin/name/ClassId;
	public final fun getDaggerProvider ()Lorg/jetbrains/kotlin/name/ClassId;
	public final fun getDaggerSubcomponent ()Lorg/jetbrains/kotlin/name/ClassId;
	public final fun getJavaxInject ()Lorg/jetbrains/kotlin/name/ClassId;
	public final fun getJavaxProvider ()Lorg/jetbrains/kotlin/name/ClassId;
	public final fun getJavaxQualifier ()Lorg/jetbrains/kotlin/name/ClassId;
	public final fun getJavaxScope ()Lorg/jetbrains/kotlin/name/ClassId;
	public final fun getKotlinJvmStatic ()Lorg/jetbrains/kotlin/name/ClassId;
	public final fun getKotlinJvmSuppressWildcards ()Lorg/jetbrains/kotlin/name/ClassId;
	public final fun getKotlinPublishedApi ()Lorg/jetbrains/kotlin/name/ClassId;
}

public final class com/squareup/anvil/compiler/k2/utils/names/ClassIdsKt {
	public static final fun child (Lorg/jetbrains/kotlin/name/ClassId;Ljava/lang/String;)Lorg/jetbrains/kotlin/name/ClassId;
	public static final fun classId (Lorg/jetbrains/kotlin/name/FqName;)Lorg/jetbrains/kotlin/name/ClassId;
	public static final fun getBindingModuleSibling (Lorg/jetbrains/kotlin/name/ClassId;)Lorg/jetbrains/kotlin/name/ClassId;
	public static final fun getCompanion (Lorg/jetbrains/kotlin/name/ClassId;)Lorg/jetbrains/kotlin/name/ClassId;
	public static final fun getFactoryJoined (Lorg/jetbrains/kotlin/name/ClassId;)Lorg/jetbrains/kotlin/name/ClassId;
	public static final fun getFactorySibling (Lorg/jetbrains/kotlin/name/ClassId;)Lorg/jetbrains/kotlin/name/ClassId;
	public static final fun getMembersInjectorSibling (Lorg/jetbrains/kotlin/name/ClassId;)Lorg/jetbrains/kotlin/name/ClassId;
	public static final fun joinSimpleNames (Lorg/jetbrains/kotlin/name/ClassId;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/name/ClassId;
	public static synthetic fun joinSimpleNames$default (Lorg/jetbrains/kotlin/name/ClassId;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/kotlin/name/ClassId;
	public static final fun nested (Lorg/jetbrains/kotlin/name/ClassId;Ljava/lang/String;)Lorg/jetbrains/kotlin/name/ClassId;
	public static final fun sibling (Lorg/jetbrains/kotlin/name/ClassId;Ljava/lang/String;)Lorg/jetbrains/kotlin/name/ClassId;
}

public final class com/squareup/anvil/compiler/k2/utils/names/Names {
	public static final field INSTANCE Lcom/squareup/anvil/compiler/k2/utils/names/Names;
	public final fun getDependencies ()Lorg/jetbrains/kotlin/name/Name;
	public final fun getModules ()Lorg/jetbrains/kotlin/name/Name;
	public final fun getScope ()Lorg/jetbrains/kotlin/name/Name;
}

public final class com/squareup/anvil/compiler/k2/utils/psi/PsiUtilsKt {
	public static final fun ktPsiFactory (Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/psi/KtPsiFactory;
}

public final class com/squareup/anvil/compiler/k2/utils/stdlib/CollectionUtilsKt {
	public static final fun mapNotNullToSet (Ljava/util/Collection;Ljava/util/Set;Lkotlin/jvm/functions/Function1;)Ljava/util/Set;
	public static synthetic fun mapNotNullToSet$default (Ljava/util/Collection;Ljava/util/Set;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/util/Set;
	public static final fun mapToSet (Ljava/util/Collection;Ljava/util/Set;Lkotlin/jvm/functions/Function1;)Ljava/util/Set;
	public static final fun mapToSet ([Ljava/lang/Object;Ljava/util/Set;Lkotlin/jvm/functions/Function1;)Ljava/util/Set;
	public static synthetic fun mapToSet$default (Ljava/util/Collection;Ljava/util/Set;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/util/Set;
	public static synthetic fun mapToSet$default ([Ljava/lang/Object;Ljava/util/Set;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/util/Set;
	public static final fun singleOrNone (Ljava/lang/Iterable;)Ljava/lang/Object;
	public static final fun singleOrNone (Ljava/lang/Iterable;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

